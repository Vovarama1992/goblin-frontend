import { z } from 'zod'

// Схема для регистрации пользователя, содержащая только email, password и confirmPassword
export const signUpSchema = z
  .object({
    confirmPassword: z
      .string()
      .min(8, 'Пароль должен содержать минимум 8 символов')
      .regex(/(?=.*[0-9])/, 'Пароль должен содержать хотя бы одну цифру')
      .regex(/(?=.*[a-z])/, 'Пароль должен содержать хотя бы одну строчную букву')
      .regex(/(?=.*[A-Z])/, 'Пароль должен содержать хотя бы одну заглавную букву')
      .regex(
        /(?=.*[!@#$%^&*(),.?":{}|<>])/,
        'Пароль должен содержать хотя бы один специальный символ'
      ),
    email: z.string().email('Некорректный email').nonempty('Email обязателен'),
    password: z
      .string()
      .min(8, 'Пароль должен содержать минимум 8 символов')
      .regex(/(?=.*[0-9])/, 'Пароль должен содержать хотя бы одну цифру')
      .regex(/(?=.*[a-z])/, 'Пароль должен содержать хотя бы одну строчную букву')
      .regex(/(?=.*[A-Z])/, 'Пароль должен содержать хотя бы одну заглавную букву')
      .regex(
        /(?=.*[!@#$%^&*(),.?":{}|<>])/,
        'Пароль должен содержать хотя бы один специальный символ'
      ),
  })
  .refine(data => data.password === data.confirmPassword, {
    message: 'Пароли должны совпадать',
    path: ['confirmPassword'], // Сообщение об ошибке будет показано для поля подтверждения пароля
  })

export type SignUpFormData = z.infer<typeof signUpSchema>
